---

# Task 1: Ensure LXD is installed
- name: Install LXD
  shell: snap install lxd --channel=latest/stable
  become: yes

# Task 2: Initialize LXD with minimal configuration
- name: Initialize LXD
  shell: lxd init --minimal
  become: yes

# Task 3: Add the user running the playbook to the LXD group
- name: Add the local user running the playbook to the lxd group
  user:
    name: "{{ lookup('env', 'USER') }}"  # Retrieve the local user running the playbook
    groups: lxd
    append: yes  # Ensure the user is added to the lxd group without removing them from others
  become: yes  # Required to modify user group membersh


# Task 4: Install required Python dependencies
- name: Install Python dependencies
  pip:
    name: "{{ item }}"
  loop:
    - fastapi
    - pandas
    - pylxd
    - netmiko
    - ansible-pylibssh
  become: yes

# Task 5: Check if BSP file exists
- name: Check if BSP file exists
  stat:
    path: "../../data/{{ bsp_file_name }}"
  register: bsp_stat

# Task 6: Check if rootfs file exists
- name: Check if rootfs file exists
  stat:
    path: "../../data/{{ rootfs_file_name }}"
  register: rootfs_stat

# Task 7: Download BSP file if not already present
- name: Download BSP if not already present
  get_url:
    url: "{{ bsp_url }}"
    dest: "../../data/{{ bsp_file_name }}"
  when: not bsp_stat.stat.exists

# Task 8: Download rootfs file if not already present
- name: Download rootfs if not already present
  get_url:
    url: "{{ rootfs_url }}"
    dest: "../../data/{{ rootfs_file_name }}"
  when: not rootfs_stat.stat.exists



# Optional Task: Start the system manager service (if needed)
# - name: Start system manager service
#   shell: python3 api/system_manager_service.py &
#   args:
#     executable: /bin/bash
